<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>21FALL英美混申经验</title>
    <url>/2021/06/08/21FALL%E8%8B%B1%E7%BE%8E%E6%B7%B7%E7%94%B3%E7%BB%8F%E9%AA%8C/</url>
    <content><![CDATA[<h1 id="123"><a class="markdownIt-Anchor" href="#123"></a> 123</h1>
<h2 id="132"><a class="markdownIt-Anchor" href="#132"></a> 132</h2>
<h3 id="123-2"><a class="markdownIt-Anchor" href="#123-2"></a> 123</h3>
<h4 id="123-3"><a class="markdownIt-Anchor" href="#123-3"></a> 123</h4>
<h5 id="123-4"><a class="markdownIt-Anchor" href="#123-4"></a> 123</h5>
<h1 id="背景介绍"><a class="markdownIt-Anchor" href="#背景介绍"></a> 背景介绍</h1>
<p>三维：GPA 3.28 (最后三个学期3.61) TOEFL 108(S25) GRE 323(153+170+3.5)</p>
<h1 id="申请-timeline"><a class="markdownIt-Anchor" href="#申请-timeline"></a> 申请 Timeline</h1>
<p><img src="https://markdown.diobrando0825.cn/2021-06-08-Screen%20Shot%202021-06-08%20at%203.35.24%20PM.png" alt="" /></p>
<h1 id="具体的申请准备"><a class="markdownIt-Anchor" href="#具体的申请准备"></a> 具体的申请准备：</h1>
<h2 id="三维"><a class="markdownIt-Anchor" href="#三维"></a> 三维</h2>
<h2 id="科研实习"><a class="markdownIt-Anchor" href="#科研实习"></a> 科研/实习</h2>
<h1 id="软硬实力对于申请的影响和作用"><a class="markdownIt-Anchor" href="#软硬实力对于申请的影响和作用"></a> 软硬实力对于申请的影响和作用</h1>
<h1 id="给学习学妹们的建议"><a class="markdownIt-Anchor" href="#给学习学妹们的建议"></a> 给学习学妹们的建议</h1>
]]></content>
  </entry>
  <entry>
    <title>My New Post</title>
    <url>/2021/05/24/My-New-Post/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2>
<h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>杂</category>
      </categories>
      <tags>
        <tag>生活</tag>
        <tag>读书</tag>
        <tag>电影</tag>
      </tags>
  </entry>
  <entry>
    <title>Python中Mysqldb传递参数的坑</title>
    <url>/2021/05/24/Python%E4%B8%ADMysqldb%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0%E7%9A%84%E5%9D%91/</url>
    <content><![CDATA[<p>今天在实现业务逻辑的过程中遇到了一些Mysqldb传递参数的坑，在此记录一下。</p>
<h3 id="不传递参数"><a class="markdownIt-Anchor" href="#不传递参数"></a> 不传递参数</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="传递参数"><a class="markdownIt-Anchor" href="#传递参数"></a> 传递参数</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h4 id="传递单个参数"><a class="markdownIt-Anchor" href="#传递单个参数"></a> 传递单个参数</h4>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="传递多个参数"><a class="markdownIt-Anchor" href="#传递多个参数"></a> 传递多个参数</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<h3 id="防止sql注入的方法"><a class="markdownIt-Anchor" href="#防止sql注入的方法"></a> 防止SQL注入的方法</h3>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>Python</tag>
        <tag>坑</tag>
      </tags>
  </entry>
  <entry>
    <title>golang 中使用 interface 实现同一个函数返回不同类型的结果</title>
    <url>/2021/06/08/golang%20%E4%B8%AD%E4%BD%BF%E7%94%A8%20interface%20%E5%AE%9E%E7%8E%B0%E5%90%8C%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E4%B8%8D%E5%90%8C%E7%B1%BB%E5%9E%8B%E7%9A%84%E7%BB%93%E6%9E%9C/</url>
    <content><![CDATA[<figure class="highlight golang"><table><tr><td class="code"><pre><span class="line"><span class="number">123</span></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>类型断言</tag>
        <tag>Golang</tag>
        <tag>Interface</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在 go 服务中同时生成 gRPC 以及 RESTful 两种「api」</title>
    <url>/2021/06/04/%E5%A6%82%E4%BD%95%E5%9C%A8%20go%20%E6%9C%8D%E5%8A%A1%E4%B8%AD%E5%90%8C%E6%97%B6%E7%94%9F%E6%88%90%20gRPC%20%E4%BB%A5%E5%8F%8A%20RESTful%20%E4%B8%A4%E7%A7%8D%E3%80%8Capi%E3%80%8D/</url>
    <content><![CDATA[<h2 id="grpc-介绍"><a class="markdownIt-Anchor" href="#grpc-介绍"></a> gRPC 介绍</h2>
<p>gRPC 是一种广泛应用的 RPC 框架，其在性能和兼容性上都有一定的提升：</p>
<ul>
<li>使用 Protobuf 进行数据编码，实现了很高的数据压缩率</li>
<li>使用 HTTP 2.0 弥补了 HTTP 1.1 的不足，例如多路复用的机制让连接数量减少</li>
</ul>
<p>但是在实际的应用过程中，我们可能不仅需要 gRPC 完成内部各微服务之间的交互，很多时候也需要对外仍然使用 RESTful 类型的 api。同时实现两种形式的 api 接口是一种解决方案，但这样不仅降低开发效率也增加了调试难度。gRPC-Gateway 很好地解决的这个问题，其实现方法如下图，gRPC-Gateway 以网关的形式将 RESTful 的 api 转化为 gRPC 的形式：</p>
<span id="more"></span>
<p><img src="https://markdown.diobrando0825.cn/2021-06-04-architecture_introduction_diagram.svg" alt="" /></p>
<p>本文就直接略去 gRPC 以及 gRPC-Gateway 的安装步骤以及普通的使用方式介绍，直接介绍如何将 gRPC-Gateway 应用于普通方式中。下面的 proto 文件中✅ 部分为使用 gRPC-Gateway 需要增加的部分。</p>
<h2 id="编写-proto-文件"><a class="markdownIt-Anchor" href="#编写-proto-文件"></a> 编写 proto 文件</h2>
<figure class="highlight protobuf"><table><tr><td class="code"><pre><span class="line"><span class="comment">// tmp.proto</span></span><br><span class="line"><span class="comment">// 使用 proto2/3 语法</span></span><br><span class="line">syntax = <span class="string">&quot;proto3&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ✅ 引入 google api 官方扩展包</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;google/api/annotations.proto&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 包/作用域/name space</span></span><br><span class="line"><span class="keyword">package</span> tmp</span><br><span class="line"></span><br><span class="line"><span class="comment">// option go_package = &quot;path;name&quot;</span></span><br><span class="line"><span class="comment">// path 表示生成的 go 文件存放的位置，name 表示生成的 go 文件所属的包</span></span><br><span class="line"><span class="keyword">option</span> go_package = <span class="string">&quot;.;tmp&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//--------Message--------</span></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">TmpReq</span> </span>&#123;</span><br><span class="line">	<span class="built_in">int64</span> field1  = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">string</span> field2 = <span class="number">2</span>;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">message</span> <span class="title">TmpResp</span> </span>&#123;</span><br><span class="line">	<span class="built_in">int64</span> field1  = <span class="number">1</span>;</span><br><span class="line">	<span class="built_in">string</span> field2 = <span class="number">2</span>;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//--------Service--------</span></span><br><span class="line"><span class="class"><span class="keyword">service</span> <span class="title">TmpService</span> </span>&#123;</span><br><span class="line">	<span class="function"><span class="keyword">rpc</span> TmpFunc(TmpReq) <span class="keyword">returns</span> (TmpResp) </span>&#123; </span><br><span class="line">	<span class="comment">// ✅ google.api.http</span></span><br><span class="line">	<span class="keyword">option</span> (google.api.http) = &#123;</span><br><span class="line">		post: <span class="string">&quot;/tmp_func&quot;</span></span><br><span class="line">		body: *</span><br><span class="line">	&#125;,&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="生成文件"><a class="markdownIt-Anchor" href="#生成文件"></a> 生成文件</h2>
<h3 id="生成-tmppbgo-grpc"><a class="markdownIt-Anchor" href="#生成-tmppbgo-grpc"></a> 生成 tmp.pb.go (gRPC)</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">protoc -I/usr/<span class="built_in">local</span>/include -I. -I<span class="variable">$GOPATH</span>/src -I<span class="variable">$GOPATH</span>/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis --go_out=plugins=grpc:. tmp.proto</span><br></pre></td></tr></table></figure>
<h3 id="生成-tmppbgwgo-http"><a class="markdownIt-Anchor" href="#生成-tmppbgwgo-http"></a> 生成 tmp.pb.gw.go (http) ✅</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">protoc -I/usr/<span class="built_in">local</span>/include -I. -I<span class="variable">$GOPATH</span>/src -I<span class="variable">$GOPATH</span>/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis --grpc-gateway_out=logtostderr=<span class="literal">true</span>:. tmp.proto </span><br></pre></td></tr></table></figure>
<h3 id="生成-swagger"><a class="markdownIt-Anchor" href="#生成-swagger"></a> 生成 swagger</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">protoc -I/usr/<span class="built_in">local</span>/include -I. -I<span class="variable">$GOPATH</span>/src -I<span class="variable">$GOPATH</span>/src/github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis --go_out=plugins=grpc:. tmp.proto</span><br></pre></td></tr></table></figure>
<h2 id="启动服务"><a class="markdownIt-Anchor" href="#启动服务"></a> 启动服务</h2>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;flag&quot;</span></span><br><span class="line">	<span class="string">&quot;net/http&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;github.com/golang/glog&quot;</span></span><br><span class="line">	<span class="string">&quot;github.com/grpc-ecosystem/grpc-gateway/runtime&quot;</span></span><br><span class="line">	<span class="string">&quot;golang.org/x/net/context&quot;</span></span><br><span class="line">	<span class="string">&quot;google.golang.org/grpc&quot;</span></span><br><span class="line"></span><br><span class="line">	gw <span class="string">&quot;grpc-helloworld-gateway/helloworld&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">	echoEndpoint = flag.String(<span class="string">&quot;echo_endpoint&quot;</span>, <span class="string">&quot;localhost:50051&quot;</span>, <span class="string">&quot;endpoint of YourService&quot;</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">run</span><span class="params">()</span> <span class="title">error</span></span> &#123;</span><br><span class="line">	ctx := context.Background()</span><br><span class="line">	ctx, cancel := context.WithCancel(ctx)</span><br><span class="line">	<span class="keyword">defer</span> cancel()</span><br><span class="line"></span><br><span class="line">	mux := runtime.NewServeMux()</span><br><span class="line">	opts := []grpc.DialOption&#123;grpc.WithInsecure()&#125;</span><br><span class="line">	err := gw.RegisterGreeterHandlerFromEndpoint(ctx, mux, *echoEndpoint, opts)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> err</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> http.ListenAndServe(<span class="string">&quot;:8080&quot;</span>, mux)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	flag.Parse()</span><br><span class="line">	<span class="keyword">defer</span> glog.Flush()</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> err := run(); err != <span class="literal">nil</span> &#123;</span><br><span class="line">		glog.Fatal(err)</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h3>
<ul>
<li><a href="https://grpc.io/docs/what-is-grpc/introduction/">gRPC</a></li>
<li><a href="https://github.com/grpc-ecosystem/grpc-gateway">gRPC-Gateway</a></li>
<li><a href="https://developers.google.com/protocol-buffers">Protocal Buffers</a></li>
<li><a href="https://www.cnblogs.com/andyidea/archive/2017/03/10/6529900.html">grpc转换为http协议对外提供服务</a></li>
</ul>
]]></content>
      <tags>
        <tag>Golang</tag>
        <tag>gRPC</tag>
        <tag>ProtoBuf</tag>
      </tags>
  </entry>
  <entry>
    <title>记录</title>
    <url>/2021/06/16/%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<blockquote>
<p>A - Companies</p>
</blockquote>
<ul>
<li>Adobe</li>
<li>Akuna <a href="https://akunacapital.com/job-details?gh_jid=3170386">SDE</a></li>
<li>Amazon <a href="https://www.amazon.jobs/en/jobs/1557929/software-development-engineer-internship-summer-2022-us">SDE</a></li>
<li>Apple</li>
<li>Autodesk</li>
</ul>
<span id="more"></span>
<blockquote>
<p>B - Companies</p>
</blockquote>
<ul>
<li>Bank of America</li>
<li>Blackrock</li>
<li>Bloomberg</li>
</ul>
<blockquote>
<p>C - Companies</p>
</blockquote>
<ul>
<li>Cadence</li>
<li>Capital One</li>
<li>Chase</li>
<li>Cisco</li>
<li>Citadel</li>
<li>Citrix</li>
</ul>
<blockquote>
<p>D - Companies</p>
</blockquote>
<ul>
<li>Databricks</li>
<li>Dell</li>
<li>Dropbox</li>
</ul>
<blockquote>
<p>F - Companies</p>
</blockquote>
<ul>
<li>Facebook</li>
</ul>
<blockquote>
<p>G - Companies</p>
</blockquote>
<ul>
<li>Goldman Sachs</li>
<li>Google</li>
</ul>
<blockquote>
<p>I - Companies</p>
</blockquote>
<ul>
<li>IBM</li>
<li>Indeed</li>
<li>Intel</li>
<li>Intuit</li>
</ul>
<blockquote>
<p>J - Companies</p>
</blockquote>
<ul>
<li>JP Morgan</li>
</ul>
<blockquote>
<p>K - Companies</p>
</blockquote>
<ul>
<li>KPMG</li>
</ul>
<blockquote>
<p>L - Companies</p>
</blockquote>
<ul>
<li>Lime</li>
<li>LinkedIn</li>
<li>Lyft</li>
</ul>
<blockquote>
<p>M - Companies</p>
</blockquote>
<ul>
<li>Microsoft</li>
<li>Morgan Stanley</li>
</ul>
<blockquote>
<p>P - Companies</p>
</blockquote>
<ul>
<li>Paypal</li>
</ul>
<blockquote>
<p>Q - Companies</p>
</blockquote>
<ul>
<li>Qualtrics</li>
<li>Qualcomm</li>
</ul>
<blockquote>
<p>R - Companies</p>
</blockquote>
<ul>
<li>Robinhood</li>
<li>Red Hat</li>
</ul>
<blockquote>
<p>S - Companies</p>
</blockquote>
<ul>
<li>Salesforce <a href="https://salesforce.wd1.myworkdayjobs.com/en-US/External_Career_Site/job/California---San-Francisco/Summer-2022-Intern---Software-Engineer_JR100559-1?source=JobBoard_Indeed">SDE Intern</a></li>
<li>SAP</li>
</ul>
<blockquote>
<p>T - Companies</p>
</blockquote>
<ul>
<li>Tesla</li>
<li>Tripadvisor</li>
<li>Tusimple</li>
<li>Two Sigma</li>
<li>Twitter</li>
</ul>
<blockquote>
<p>U - Companies</p>
</blockquote>
<ul>
<li>Uber</li>
</ul>
<blockquote>
<p>Y - Companies</p>
</blockquote>
<ul>
<li>Yahoo</li>
<li>Yelp</li>
</ul>
]]></content>
      <tags>
        <tag>Intern</tag>
      </tags>
  </entry>
</search>
